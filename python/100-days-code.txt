* print('texto') ---> para mostrar en consola
* \n ---> dentro de un texto hace un enter en el contenido. Baja un renglon
print('texto1' + 'texto2') ---> concatenar strings
* input ---> para hacer un prompt como javascript ---> input('mensaje que va a ver el usuario').
* # ---> para comentar
* len(variable) ---> longitud
* para acceder a un caracter en especifico podemos hacer ---> 'hola'[0] y accederiamos a la h
* podemos sustituir las , en los numeros por _ y python lo interpreta igual. Solo si son de tipo number
* type(variableElegida) ---> te dice de que tipo es la variable
* srt(var) ---> cambia a string
* int(var) ---> castea a entero
* float(variable) ---> castea a flotante
* .lower() ---> pasa el string a minuscula
* .count(letra que buscamos) ---> devuelve la cantidad de veces que aparece una letra en el string
* una division devuelve un flotante por mas que sea un entero el resultado
* numero ** numero ---> asi se hace una potencia
* round(number, option) ---> redondea la variable que le pasemos, option es la cantidad de lugares desp de la coma que queremos redondear
* numero1 // numero2 ---> floor division. Division que corta el resultado al entero mas bajo. En una division haciendo esto, lo convierte a entero
* += , -= , *= , /= ---> operador que suma/resta/multiplica/divide a la variable en cuestion. Igual que javascript
* f-string ---> cuando agregamos f antes de un string, podemos mediantes {} agregar variables de otros tipos de datos en la cadena de caracteres. Ejemplo print(f"hola mi nombre es {mi_nombre}")
* operadores logicos
!= distinto
== igual
> mayor que
>= mayor igual que
< menor que
<=  menor igual que

* condicional if
if condition:
    // hago cosas con un tab para adentro

* condicional if else
if condition:
    // hago cosas con un tab para adentro
else:
    // hago cosas

* condicional if else if ...

if condition:
    // hago cosas con un tab para adentro
elif otraCondicion:
    // hago cosas en el else if
else:
    // hago cosas en el else

* % ---> operador modulo, sirve para saber lo que devuelve de resto una division
* & and ---> se puede escribir de cualquiera de las dos formas. Ejemplo condicion1 & condicion2. Si se cumplen las 2 es true
* | or ---> se puede escribir de las dos formas. condicion para que se cumpla una de las condiciones. Ejemplo: condicion1 or condicion2.
* ~ not ---> se puede escribir de las dos formas. negador del resultado de la condicion, cambia el booleano




quede ne el 38

https://www.udemy.com/course/100-days-of-code/learn/lecture/17965132#overview














DUDAS


QUE HACEN ESTOS 2 OPERADORES ? --->  << , >>